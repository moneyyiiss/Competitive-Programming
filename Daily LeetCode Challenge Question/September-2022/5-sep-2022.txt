/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> list = new ArrayList<>();
        if(root == null){
            return list;
        }
        Queue<Node> q = new ArrayDeque<>();
        q.add(root);
        
        
        while(q.size() > 0){
            int n = q.size();
            
            
            List<Integer> list1 = new ArrayList<>();
            for(int i=0; i<n; i++){
                root = q.remove();
                for(Node child: root.children){
                    q.add(child);
                }
            list1.add(root.val);
                
            }
            
            
            list.add(list1);
        }
        return list;
    }
}