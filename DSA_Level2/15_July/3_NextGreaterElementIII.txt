class Solution {
    public int nextGreaterElement(int n) {
        char[] nums = (n+"").toCharArray();
        
//         Finding the deep
        int i=nums.length-1;
        while(i>0){
            if(nums[i-1] >= nums[i]){
                i--;
            }else{
                break;
            }
        }
        
        if(i == 0){
            return -1;
        }
        int idx = i-1; //deep
        
        //finding the greater than deep
        int j = nums.length-1;
        while(j>=idx){
            if(nums[j]>nums[idx]){
                break;
            }
            j--;
        }
        //swap
        swap(nums, idx, j);
        //reverse
        int left = i;
        int right=nums.length-1;
        reverse(nums, left, right);
        
        String res = new String(nums);
        long val = Long.parseLong(res);
        return (val > Integer.MAX_VALUE ? -1: (int)val);
        
        
        
    }
    public void swap(char[] arr, int i, int j){
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    
    public void reverse(char[] arr, int i, int j){
        while(i<j){
            swap(arr, i, j);
            i++;
            j--;
        }
    }
}